not True == False

2**10 == 2의 10제곱
50//3 == 50을 3으로 나누었을때의 몫

----숫자 함수----
abs() : 절댓값
pow(n,b) : n의 b제곱
max(a,b,c) : 최댓값
min() : 
round() : 반올림

----라이브러리 활용----
from math import *
floor() : 내림
ceil() : 올림
sqrt() : 제곱근

from random import *
random() : 난수 (0.0 이상 1.0 이하)
randrange(a,b) : a~b(미만) 난수
randint(a,b) : a~b(이하) 난수

----타입 캐스팅----
int()

sentence = """
this is string type
with numerous string

----슬라이싱----
personal[0:7] #0~6 까지임
personal[0:] #끝까지
personal[-3:] #맨 뒤 기준으로 시작 1234면 2부터 4까지

----문자열 처리 함수----
python = "Python"
python.lower() : 소문자
python.upper() : 대문자
python[].isupper()
len(python) : 길이
python.replace("Py", "pY") : 교체

index = python.index("y") : 위치 확인, 못찾으면 에러
index = python.index("y",startpoint + 1) : 특정 지점 후의 위치 확인

python.find("Py") : 위치 확인, 못찾으면 -1 반환
python.count("y") : 몇 번 나오는지 카운팅

----문자열포멧----
print("나는 %d살 입니다." %20)
print("나는 {}살입니다." .format(20))

%s
%c 'a'/"A"
print("favorite color is %s, %s" %("blue", "beige"))

print("나는 {}{}살입니다." .format(2,0))
print("나는 {0}{1}살입니다." .format(2,0))

print("나는 {age_1}{age_2}살입니다." .format(age_1 = 2, age_2 = 0))

#실제 변수에 사용된 값사용하는 방법
age_1 = 2
age_2 = 0
print(f"나는 {age_1}{age_2}살입니다.")

----탈출문자----
print("저는 'qkd1101'입니다.")
print('저는 "qkd1101"입니다.')
print("저는 \"qkd1101\"입니다.")

print("converse 70 \rchuck") #커서 앞으로 이동 출력 값 : chuck 
\b : 벡스페이스 한글자 삭제
\t : 탭


----리스트----
subway = [10,20,30]

#2중리스트
a = [[0 for col in range(14)] for row in range(14)]

subway.index() : find 위치
subway.append() : 마지막 인덱스 뒤에 요소 추가
subway.insert(i,a) : a 를 i 인덱스에 요소 추가
subway.pop() : queue pop 마지막 인덱스 제거
subway.count : cnt

subway.sort() : 오름 차순 정렬
subway.reverse() : 내림 차순 정렬

subway.clear() : 내용 모두 삭제

subway[-1] : 마지막 요소

#다양한 자료형 사용 가능
mix_list = ["강길동", 30 , True]

#리스트 합치기
subway.extend(mix_list) : subway 리스트에 mix_list 합침

#한줄로 되어있는 문자들 리스트의 정수형으로 받기
# ex) 1 2 3 4 5 6 7 8 9 10 11
li = list(map(int,input().split()))

----사전----
cabinet = {3:"A", 100:"A2", "A-3" : "A3"}
print(cabinet[3]) : 특정 인덱스 순서쌍
print(cabinet.get(3)) : 벨류

print(cabinet[5]) : 에러 발생 + 종료
print(cabinet.get(5)) : "none" 반환, 종료 X
print(cabinet.get(5,"Stirng A")) : "String A" 반환, 종료 X
print(3 in cabinet) : boolean, 있는지 없는지

cabinet["A-3"] = "3" : 변경
cabinet["A-4"] = "A4" : 추가

del cabinet["A-4"] : 삭제

print(cabinet.keys()) : 키 들만 출력
print(cabinet.values()) : 벨류 들만 출력
print(cabinet.items()) : 키, 벨류 쌍들 출력

cabinet.clear() : 삭제

----튜플----
#속도가 빠르나 변경 불가.
menu = ("돈까스", "생선구이")

(name, age, hobby) = ("강길동", 19, "코딩") #한꺼번에 선언이 가능함.

----집합----
#중복 X, 순서 보장 X
my_set = {1,2,3,3,3}
print(my_set) #1,2,3

java = {"A","B","C"}
python = set(["A","D"])

print(java.union(python)) #합집합
print(java.difference(python)) #차집합
print(java.intersection(python)) #교집합

python.add("E") : 추가
java.remove("A") : 삭제
 
----자료구조의 변경----
menu={"커피","우유"}
menu = list(menu) #list type으로 casting
menu = tuple(menu)
menu = set(menu) #set type으로 casting

----if----
if a == 1:
elif a == 2:
else :

----반복문----
for i in range(5) :  #range(n): #0~n
    print("{0}" ,format(i))

customer = {"A", "B", "C" }

for cus in customer:
    print("{0}" .format(cus)) #역순 출력됨.

students = range(0,100)
students = [i+100 for i in students]

students = ["AV", "BC", "HA"]
students = [lent(i) for i in studnets]

customer = "A"
index = 5;

while index >= 1:
    print("{0}" index)
    
----입력----
input("input file name: ")

temp = int(input("input your age"))

a, b = input('문자열 두 개를 입력하세요: ').split()    # 입력받은 값을 공백을 기준으로 분리
a, b = map(int, input('숫자 두 개를 입력하세요: ').split())
a, b = map(int, input('숫자 두 개를 입력하세요: ').split(',')) # 입력받은 값을 콤마를 기준으로 분리
 
----조건----
a == 1 and b == 7

